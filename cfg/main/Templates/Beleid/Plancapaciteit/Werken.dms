container Werken
{
	container impl
	{
		unit<uint32> Read_kantoren_gdb
		: StorageName     = "%RestrictiesDataDir%/Beleid/Ruimte/NieuweNieuweKaart/Kantoren_plannen_2019.gdb"
		, StorageType     = "gdal.vect"
		, StorageReadOnly = "True"
		, SqlString       = "SELECT * FROM Kantoren_plannen_2019 WHERE Naam <> 'Geen data beschikbaar' AND IsSymbool=0"
		, Source          = "Hans van der Reijden en Veerle Veraart (RIGO)- Stichting De Nieuwe Kaart van Nederland 2 juli 2020"
							"shp-formaat Y:\Kennisbasis\Leefomgeving\data_Leefomgeving\RS\brondata\BASIS2012\Beleid\Ruimte\nieuwenieuwekaart\Bedrijven_kantoren_plannen_2019\Kantoren_plannen_2019.shp"
							"gdb conversie in ArcMap 10.3.1 met repair geometry en toevogen IQ ((4*3.1415926535897932384626433* [Shape_Area])/ ( [Shape_Length]* [Shape_Length])) en IsSymbool veld"
		{
			attribute<rdc_meter> Geometry (polygon);
		}
		
		unit<uint32> Make_Kantoren := Read_kantoren_gdb
		, StorageName     = "%LocalDataProjDir%/Basedata/Beleid/Ruimte/NieuweNieuweKaart/Kantoren_plannen_2019.fss"
		{
			attribute<rdc_meter> Geometry (poly) := Read_kantoren_gdb/Geometry;
		}
		
		unit<uint32> Read_Bedrijven_gdb0
		: StorageName     = "%RestrictiesDataDir%/Beleid/Ruimte/NieuweNieuweKaart/Bedrijven_plannen_2019.gdb"
		, StorageType     = "gdal.vect"
		, StorageReadOnly = "True"
		, SqlString       = "SELECT * FROM Bedrijven_plannen_2019 WHERE PLAN_NAAM <> 'Geen data beschikbaar' AND IsSymbool=0"
		, Source          = "Hans van der Reijden en Veerle Veraart (RIGO)- Stichting De Nieuwe Kaart van Nederland 2 juli 2020"
							"shp-formaat Y:\Kennisbasis\Leefomgeving\data_Leefomgeving\RS\brondata\BASIS2012\Beleid\Ruimte\nieuwenieuwekaart\Bedrijven_kantoren_plannen_2019\Bedrijven_plannen_2019.shp"
							"gdb conversie in ArcMap 10.3.1 met repair geometry en toevogen IQ ((4*3.1415926535897932384626433* [Shape_Area])/ ( [Shape_Length]* [Shape_Length])) en IsSymbool veld"
		{
			attribute<rdc_meter> Geometry (polygon);
			attribute<bool> IsMaasvlakte := id(.) == 94[.] || id(.) == 223[.];
		}
		
		unit<uint32> Make_Bedrijven := subset(!Read_Bedrijven_gdb0/IsMaasvlakte), StorageName = "%LocalDataProjDir%/Basedata/Beleid/Ruimte/NieuweNieuweKaart/Bedrijven_plannen_2019.fss"
		{
			attribute<rdc_meter> Geometry (poly) := Read_Bedrijven_gdb0/Geometry[Nr_OrgEntity];
		}
		
		
		unit<uint32> Read_MRA_shp
		:	StorageName = "%RestrictiesDataDir%/Beleid/Plancapaciteit/Noord_Holland/WerklocatiesPlabeka2019NK.shp"
		,	StorageType = "gdal.vect"
		,	Source      = "Plancapaciteit.nl, via Nils Klopper (prov. Noord Holland)"
		,	StorageReadOnly = "true"
		//Toelichting bij de velden qua planvoorraad:
		// H-Z: hard resp zacht
		// B-K: bedrijventerrein resp. kantoor
		// tr: transformatie
		// alles tav bedrijventerreinen is in ha, tav kantoren in m2
		// Kleegtot: Kantoren en Bedrijventerreinen: leegstand kantoorruimte in m2
		// Kleegcou: Kantoren en Bedrijventerreinen: courante leegstand kantoorruimte in m2
		// Kleegincou: Kantoren en Bedrijventerreinen: incourante leegstand kantoorruimte in m2
		// 30: jaar 2030
		{
			attribute<geography/rdc_meter> Geometry (poly);
		}
		
		unit<uint32> Make_MRA := Read_MRA_shp
		, StorageName     = "%LocalDataProjDir%/Basedata/Beleid/Plancapaciteit/Noord_Holland/WerklocatiesPlabeka2019NK.fss"
		{
			attribute<rdc_meter> Geometry (poly) := Read_MRA_shp/Geometry;
			attribute<float64>      BHtm30   := Read_MRA_shp/BHtm30;
			attribute<float64>      BZtm30   := Read_MRA_shp/BZtm30;
			attribute<float64>      BZna30   := Read_MRA_shp/BZna30;
			attribute<float64>      KHtm30   := Read_MRA_shp/KHtm30;
			attribute<float64>      KZtm30   := Read_MRA_shp/KZtm30;
			attribute<float64>      KZna30   := Read_MRA_shp/KZna30;
			attribute<float64>      Btrtm30  := Read_MRA_shp/Btrtm30;
			attribute<float64>      Btrna30  := Read_MRA_shp/Btrna30;
			attribute<float64>      Ktrtm30  := Read_MRA_shp/Ktrtm30;
			attribute<float64>      Ktrna30  := Read_MRA_shp/Ktrna30;
		}
	}
	
	container NieuweNieuweKaart
	{
		unit<uint32> Kantoren
		: StorageName     = "%LocalDataProjDir%/Basedata/Beleid/Ruimte/NieuweNieuweKaart/Kantoren_plannen_2019.fss"
		, StorageReadOnly = "True"
		{
			attribute<rdc_meter> Geometry (poly);
			attribute<bool> Hard := const(true, .);
			attribute<bool> Zacht := !Hard;
		}
		
		unit<uint32> Bedrijven
		: StorageName     = "%LocalDataProjDir%/Basedata/Beleid/Ruimte/NieuweNieuweKaart/Bedrijven_plannen_2019.fss"
		, StorageReadOnly = "True"
		{
			attribute<rdc_meter> Geometry (poly);
			attribute<bool> Hard := const(true, .);
			attribute<bool> Zacht := !Hard;
		}
	}
	
	unit<uint32> MRA
	: StorageName     = "%LocalDataProjDir%/Basedata/Beleid/Plancapaciteit/Noord_Holland/WerklocatiesPlabeka2019NK.fss"
	, StorageReadOnly = "true"
	{
		attribute<rdc_meter>  Geometry (poly);
		attribute<float64>      BHtm30;
		attribute<float64>      BZtm30;
		attribute<float64>      BZna30;
		attribute<float64>      KHtm30;
		attribute<float64>      KZtm30;
		attribute<float64>      KZna30;
		attribute<float64>      Btrtm30;
		attribute<float64>      Btrna30;
		attribute<float64>      Ktrtm30;
		attribute<float64>      Ktrna30;
		attribute<.>          Per_Domain (domain) := poly2grid(Geometry, domain);
		attribute<float64>    Totaal_bedrijventerrein        := BHtm30 + BZtm30 + BZna30; //exl herstructurering. NB hard na30 bestaat niet
		attribute<float64>    Totaal_kantoor                 := KHtm30 + KZtm30 + KZna30; //exl herstructurering. NB hard na30 bestaat niet
		
		attribute<bool>       HeeftBedrijventerreinEnKantoor := Totaal_bedrijventerrein > 0[float64] && Totaal_kantoor > 0[float64];
		attribute<bool>       HeeftHardEnZacht               := BHtm30 + KHtm30 > 0[float64] && BZtm30 + BZna30 + KZtm30 + KZna30 > 0[float64];
		attribute<bool>       MRAWest := OR(
			id(.) == 177[.],
			id(.) == 171[.],
			id(.) == 197[.],
			id(.) == 190[.],
			id(.) ==  47[.],
			id(.) == 265[.],
			id(.) == 254[.],
			id(.) == 238[.],
			id(.) == 168[.],
			id(.) == 246[.],
			id(.) == 249[.],
			id(.) ==  34[.],
			id(.) ==  71[.],
			id(.) == 278[.]
		);//Stat gebied HDorp en HAarlemmermeer West, enkel de polugonen die nu zacht zijn en hard moeten worden 
		
		attribute<bool>       IsHardTm30                     := BHtm30 > 0[float64] || KHtm30 > 0[float64];
		attribute<bool>       IsHard                         := IsHardTm30 || MRAWest; //hard na30 bestaat niet
		attribute<bool>       IsZacht                        := !IsHard;
		attribute<bool>       Hard                           := IsHard; //hard na30 bestaat niet
		attribute<bool>       Zacht                          := IsZacht;
		

		attribute<float64>    ShareNa30Bedrijventerrein          := BZna30 / Totaal_bedrijventerrein; // Hard na30 bestaat niet
		attribute<float64>    ShareNa30Kantoor                   := KZna30 / Totaal_kantoor; // Hard na30 bestaat niet
		attribute<float64>    ShareNa30BedrijventerreinOfKantoor := MakeDefined(ShareNa30Bedrijventerrein, 0[float64]) + MakeDefined(ShareNa30Kantoor, 0[float64]) // kan opgeteld want HeeftBedrijventerreinEnKantoor == const(false).
		{
			attribute<ha> ruimte_per_domain (domain) := float32(.[Per_Domain]) * domain/NrHaPerCell;
		}
		
		attribute<float64> ShareNa30BedrijventerreinOfKantoorOfZacht := max_elem(ShareNa30BedrijventerreinOfKantoor, MakeDefined(float64(IsZacht), 0[float64])) // kan opgeteld want HeeftBedrijventerreinEnKantoor == const(false).
		{
			attribute<ha> ruimte_per_domain_grid (domain) := float32(.[Per_Domain]) * domain/NrHaPerCell;
		}
		
		attribute<bool> IsHardOfZacht := IsHard || IsZacht;
		attribute<bool> IsHardNochZacht := !IsHardOfZacht;
		
		attribute<bool> IsTransformatie := Btrtm30 > 0[float64] || Btrna30 > 0[float64] || Ktrtm30 > 0[float64] || Ktrna30 > 0[float64];
	}
	
	unit<uint32> ZH_Top13_alliantielocaties := /SourceData/Beleid/OmgRecht/Overigen/AtelierZuidHolland/Top13_alliantielocaties
	{
		attribute<bool> Hard := const(false, .);
		attribute<bool> Zacht := !Hard;
	}
	
	unit<uint32> ZH_Toplocaties := /SourceData/Beleid/OmgRecht/Overigen/AtelierZuidHolland/Toplocaties
	{
		attribute<bool> Hard := const(false, .);
		attribute<bool> Zacht := !Hard;
	}
	
	unit<uint32> Locaties_Woon_werkakkoord_Westvlietweg_uitbreiding_nieuw := /SourceData/Beleid/OmgRecht/Overigen/AtelierZuidHolland/Locaties_Woon_werkakkoord_Westvlietweg_uitbreiding_nieuw
	{
		attribute<bool> Hard := const(true, .);
		attribute<bool> Zacht := !Hard;
	}
	
	unit<uint32> Locaties_Woon_werkakkoorden_transformatie := /SourceData/Beleid/OmgRecht/Overigen/AtelierZuidHolland/Locaties_Woon_werkakkoorden_transformatie
	{
		attribute<bool> Hard := const(true, .);
		attribute<bool> Zacht := !Hard;
	}
	
	// unit<uint32> shapes_scenarios_Helmut := /SourceData/Beleid/OmgRecht/Overigen/AtelierZuidHolland/shapes_scenarios_Helmut
	// {
		// attribute<bool> Hard := const(false, .);
		// attribute<bool> Zacht := !Hard;
	// }
	
	unit<uint32> Locaties_Woon_werkakkoord_Beter_Benutten := /SourceData/Beleid/OmgRecht/Overigen/AtelierZuidHolland/Locaties_Woon_werkakkoord_Beter_Benutten
	{
		attribute<bool> Hard := const(true, .);
		attribute<bool> Zacht := !Hard;
	}
	
	unit<uint32> Zuid_Holland := union_unit(ZH_Top13_alliantielocaties, ZH_Toplocaties, Locaties_Woon_werkakkoord_Westvlietweg_uitbreiding_nieuw, Locaties_Woon_werkakkoorden_transformatie, Locaties_Woon_werkakkoord_Beter_Benutten)
	{
		attribute<bool> Hard := union_data(., ZH_Top13_alliantielocaties/Hard, ZH_Toplocaties/Hard, Locaties_Woon_werkakkoord_Westvlietweg_uitbreiding_nieuw/Hard, Locaties_Woon_werkakkoorden_transformatie/Hard, Locaties_Woon_werkakkoord_Beter_Benutten/Hard);
		attribute<bool> Zacht := union_data(., ZH_Top13_alliantielocaties/Zacht, ZH_Toplocaties/Zacht, Locaties_Woon_werkakkoord_Westvlietweg_uitbreiding_nieuw/Zacht, Locaties_Woon_werkakkoorden_transformatie/Zacht, Locaties_Woon_werkakkoord_Beter_Benutten/Zacht);
		attribute<geography/rdc_meter> Geometry (poly) := union_data(., ZH_Top13_alliantielocaties/Geometry, ZH_Toplocaties/Geometry, Locaties_Woon_werkakkoord_Westvlietweg_uitbreiding_nieuw/Geometry, Locaties_Woon_werkakkoorden_transformatie/Geometry, Locaties_Woon_werkakkoord_Beter_Benutten/Geometry);
	}
	
	unit<uint32> IBIS := /SourceData/Grondgebruik/IBIS/Y2022
	{
		attribute<bool>	Zacht := const(false, .);
		attribute<bool> Hard := Nog50Uitgeefbaar;
	}
	
	// unit<uint32> IBIS_test_21 := /SourceData/Grondgebruik/IBIS/Y2021
	// {
		// attribute<bool>	Zacht := const(false, .);
		// attribute<bool> Hard := IsNieuwBouwOfTransformatie;
	// }
	
	container NL
	{
		unit<uint8> SrcK: NrOfRows = 5
		{
			attribute<string> name:
			[
				'NieuweNieuweKaart/Kantoren',
				'NieuweNieuweKaart/Bedrijven',
				'MRA',
				'Zuid_Holland',
				'IBIS'
			];
		}
		
		unit<uint32> SrcKXHardheidXDomainK := combine(SrcK, Classifications/HardheidXDomainK)
		{
			attribute<string> SrcK_name := Srck/name[first_rel];
			attribute<string> HardheidK_name := Classifications/HardheidXDomainK/HardheidK_name[second_rel];
			attribute<string> domainK_name := Classifications/HardheidXDomainK/domainK_name[second_rel];
			attribute<string> name := SrcK_name+'/'+HardheidK_name+'/'+domainK_name;
		}
		
		container Per_SrcKXHardheidXDomainK := for_each_ne(SrcKXHardheidXDomainK/name, 'SrcKXHardheidXDomainT('+string(id(SrcKXHardheidXDomainK))+'[SrcKXHardheidXDomainK])');
		container Per_HardheidXDomainK := for_each_ne(Classifications/HardheidXDomainK/name, 'HardheidXDomainT('+string(id(Classifications/HardheidXDomainK))+'[Classifications/HardheidXDomainK])');
		
		Template SrcKXHardheidXDomainT
		{
			//
			parameter<SrcKXHardheidXDomainK> id;
			//
			
			unit<ipoint> domain := = SrcKXHardheidXDomainK/domainK_name[id];
			
			unit<uint32> Src := = SrcKXHardheidXDomainK/SrcK_name[id]
			{
				attribute<.> per_domain (domain) := poly2grid(Src/Geometry, domain);
			}
			
			attribute<bool> IsHard        (domain) := Src/Hard[Src/per_domain];
			attribute<bool> IsZacht       (domain) := Src/Zacht[Src/per_domain];
			attribute<bool> IsHardOfZacht (domain) := IsHard || IsZacht;
			attribute<bool> IsGeen        (domain):= !IsHardOfZacht;
			attribute<bool> IsHardheidK   (domain) := = 'Is'+SrcKXHardheidXDomainK/HardheidK_name[id];
		}
		
		Template HardheidXDomainT
		{
			//
			parameter<Classifications/HardheidXDomainK> id;
			//
			
			unit<ipoint> domain := = Classifications/HardheidXDomainK/domainK_name[id];
			
			parameter<string> CalcStr :=
				replace(
					'max_elem('+
						AsItemList(
							'Per_SrcKXHardheidXDomainK/'+SrcK/name+'/@H@/@D@/@V@'
						)+
					')',
					'@H@', Classifications/HardheidXDomainK/HardheidK_name[id], '@D@', Classifications/HardheidXDomainK/domainK_name[id]
				);
			
			attribute<bool> IsHardheidK (domain) := = replace(CalcStr, '@V@', 'IsHardheidK');
		}
	}
	
	// unit<uint32> NL := union_unit(NieuweNieuweKaart/Kantoren, NieuweNieuweKaart/Bedrijven, MRA, Zuid_Holland)
	// {
		// attribute<geography/rdc_meter> Geometry (poly) := union_data(.,
			// NieuweNieuweKaart/Kantoren/Geometry,
			// NieuweNieuweKaart/Bedrijven/Geometry,
			// MRA/Geometry,
			// Zuid_Holland/Geometry
		// );
		
		// attribute<bool> Hard := union_data(.,
			// NieuweNieuweKaart/Kantoren/Hard,
			// NieuweNieuweKaart/Bedrijven/Hard,
			// MRA/Hard,
			// Zuid_Holland/Hard
		// );
		
		// attribute<bool> Zacht := !Hard;
		
		// attribute<.> Per_Domain      (Domain)      := poly2grid(Geometry, Domain);
		// attribute<.> Per_AllocDomain (AllocDomain) := poly2grid(Geometry, AllocDomain);
		// attribute<.> Per_rdc_25m (rdc_25m) := poly2grid(Geometry, rdc_25m);
	// }
}